

.btn{
    line-height: 16px;
    font-size: 14px;
    font-weight: 400;
    padding: 10px 15px;
    border-radius: 5px;
    border: none;
    cursor: pointer;
}

.btn-outline{
    background-color: transparent;
}

.btn-primary{
    background-color:blue;
    color: white;
}





.logo{
    min-width: 27px;
    max-height: 27px;
}

.search{
    margin-bottom: 45px;
}

.search-box{
    width: 100%;
    background-color: blue;
    padding: 3px;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    border-radius: 6px;
}

.search-box input {
    flex-grow: 1;
    padding: 14px 22px;
    border-radius: 6px;
    outline: none;
    border: none;
    min-width: 0;
}

.search-btn{
    display: flex;
    align-items: center;
}

.search-btn .search-btn__text{
    margin-left: 4px;
    font-size: 16px;
    line-height: 19px;
}

.search-btn .search-btn__icon{
    width: 16px;
    height: 16px;
}


* {
    box-sizing: border-box;
}

.container {
    width: 100%;
    max-width: 1170px;
    margin: 0 auto;
    padding: 0 12px;
}

.content-main__list {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    row-gap: 30px;
}





.content {
    padding-bottom: 50px;
}

.content-box {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 30px;
}

.content-main {
    flex-grow: 1;
    height: 100%;
}

.content-main__title {
    font-size: 24px;
    line-height: 28px;
    margin-top: 0;
    margin-bottom: 25px;
}



/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure, fieldset):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
/* :where(
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  ul,
  ol,
  dl
):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  padding: 0;
  border: none;
} */

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
/* p {
  --paragraphMarginBottom: 24px;

  margin-block: 0;
} */

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
/* p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
} */


/**
  Упрощаем работу с изображениями и видео
 */
/* img,
video {
  display: block;
  max-width: 100%;
  height: auto;
} */

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
/* a:where([class]) {
  display: inline-flex;
} */

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Убирает серую подсветку при тапе на мобильных устройствах (iOS/Android)
 */
button {
  -webkit-tap-highlight-color: transparent;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not(
  [fill="none"],
  [fill^="url"]
)) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not(
  [stroke="none"],
  [stroke^="url"]
)) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

.content-product{
    display: flex;
    flex-grow: 1;
    gap: 30px;
}

.content-product__right,
.content-product__left {
    flex-basis: 50%;

}

.content-product__left img{
    max-width: 100%;
}

.content-product__title,
.content-product__price {
    font-size: 24px;
    line-height: 28px;
    margin-top: 0;
    margin-bottom: 25px;
}

.content-product__text{
    font-size: 14px;
    line-height: 20px;
}

.btn-large{
    width: 100%;
}



.content-side {
    width: 260px;
    min-width: 260px;
}

.content-side__title {
    font-size: 18px;
    line-height: 21px;
    margin-top: 0;
    margin-bottom: 23px;
}

.content-side__list {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%;
    gap: 25px;
    border-bottom: 1px solid rgb(229, 229, 229);
    padding-bottom: 36px;
    margin-bottom: 36px;
}

.content-side__list-item {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
}

.content-side__list-item--title{
    margin-top: 7px;
    margin-bottom: 5px;
    font-size: 18px;
    line-height: 21px;
}

.content-side__list-item--text{
    font-size: 14px;
    line-height: 16px;
    margin: 0;
}

.content-side__footer{
    display: flex;
    flex-direction: column;
    gap: 4px;
}

.content-side__footer--item{
    color: gray;
    margin: 0;
    font-size: 14px;
    line-height: 16px;
}


@media (max-width: 991px) {

    .content-product{
        flex-direction: column;
        width: 100%;
    }
    .content-product__left{
        flex-basis: 100%;
        width: 100%;
    }

    .content-product__right{
        flex-basis: 100%;
        width: 100%;
    }
}

@media (max-width: 786px) {
    .container {
        max-width: 100%;
    }
   
}




@media (max-width: 991px) {
    .container {
        max-width: 730px;
    }
    .content-box {
        flex-direction: column;
    }
    .content-main {
        width: 100%;
    }
    .content-side {
        width: 100%;
        min-width: none;
    }
}

@media (max-width: 1200px) {
    .container {
        max-width: 930px;
    }

}



